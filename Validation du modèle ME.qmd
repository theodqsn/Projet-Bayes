---
title: "Reconstruction à noyeaux"
format: revealjs
editor: visual
---

```{r}
N <-
  48 
y <-
  c(529, 530, 532, 533.1, 533.4, 533.6, 533.7, 534.1, 534.8, 535.3, 
    535.4, 535.9, 536.1, 536.3, 536.4, 536.6, 537, 537.4, 537.5, 
    538.3, 538.5, 538.6, 539.4, 539.6, 540.4, 540.8, 542, 542.8, 
    543, 543.5, 543.8, 543.9, 545.3, 546.2, 548.8, 548.7, 548.9, 
    549, 549.4, 549.9, 550.6, 551.2, 551.4, 551.5, 551.6, 552.8, 
    552.9, 553.2)
alpha <-
  c(1., 1.)

densite <- density(y)
plot(densite, main= "Construction d'une densité avec une méthode à noyaux")
polygon(densite, col="lightblue", border="blue")
points(y,  rep(0, length(y)), pch=16,col='red')
```

```{r}
library(mclust)
modele_mixture <- normalmixEM(data, k=2)
```

```{r}
prop_group <- c(0.5,0.5)
mean_group <- c(500,600)
std_group <- c(5,10)
```

```{r}
test <- rnorm(10, mean = 1, sd = 1) # Observations
t1 <- c(c(prop_group[1]*dnorm(y,mean_group[1],std_group[1])),c(prop_group[2]*dnorm(y,mean_group[2],std_group[2])))
```

```{r}
for (i in 1:1000){
  t1 <- c(prop_group[1]*dnorm(y,mean_group[1],std_group[1]))
  t2 <- c(prop_group[2]*dnorm(y,mean_group[2],std_group[2]))
  k <- t1+t2
  t1 <- t1/k
  t2 <- t2/k
  
  prop_group <- c(sum(t1),sum(t2))/N
  mean_group <- c(sum(t1*y)/sum(t1),sum(t2*y)/sum(t2))
  std_group <- sqrt(c(sum(t1*(y-mean_group[1])^2)/sum(t1),sum(t1*(y-mean_group[1])^2)/sum(t1)))
}

print("Proportion :")
print(prop_group)

print("Moyenne :")
print(mean_group)

print("Écart_type :")
print(std_group)
```

```{r}
x <- seq(520, 560, length = 100)
```

```{r}

plot(x,prop_group[1]*dnorm(x,mean_group[1],std_group[1])+prop_group[2]*dnorm(x,mean_group[2],std_group[2]), main= "Construction d'une densité avec une méthode à noyaux")
plot(densite, main= "Construction d'une densité avec une méthode à noyaux")
polygon(densite, col="lightblue", border="blue")
points(y,  rep(0, length(y)), pch=16,col='red')
```
